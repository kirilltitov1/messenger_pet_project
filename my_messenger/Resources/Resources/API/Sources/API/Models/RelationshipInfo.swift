//
// RelationshipInfo.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct RelationshipInfo: Codable, JSONEncodable, Hashable {

    public enum OutgoingStatus: String, Codable, CaseIterable {
        case _none = "none"
        case follows = "follows"
        case requested = "requested"
    }
    public enum IncomingStatus: String, Codable, CaseIterable {
        case _none = "none"
        case followedBy = "followed_by"
        case requestedBy = "requested_by"
    }
    /** Status of outgoing relationship */
    public var outgoingStatus: OutgoingStatus?
    /** Status of incoming relationship */
    public var incomingStatus: IncomingStatus?
    /** Indicates whether target user is private or not */
    public var targetUserIsPrivate: Bool?

    public init(outgoingStatus: OutgoingStatus? = nil, incomingStatus: IncomingStatus? = nil, targetUserIsPrivate: Bool? = nil) {
        self.outgoingStatus = outgoingStatus
        self.incomingStatus = incomingStatus
        self.targetUserIsPrivate = targetUserIsPrivate
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case outgoingStatus = "outgoing_status"
        case incomingStatus = "incoming_status"
        case targetUserIsPrivate = "target_user_is_private"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(outgoingStatus, forKey: .outgoingStatus)
        try container.encodeIfPresent(incomingStatus, forKey: .incomingStatus)
        try container.encodeIfPresent(targetUserIsPrivate, forKey: .targetUserIsPrivate)
    }
}

